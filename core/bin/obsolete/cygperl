#!/bin/sh

# This is necessary to make perl work with cygwin.  Cygwin passes
# "cygwin style" paths to the program in the #! statement and ActiveState
# perl does not know what /cygwin/d/... means.  

# So, we put #!/usr/local/bin/perl in the perl script and this is called
# This routine translates the path name to something of type d:/

args=""
while [ $# -gt 0 ]
do
    var=$1
    shift
    
    if test "`echo $var | grep '/'`" = "$var" 
    then
	# cygpath does the /cygwin/d/ to d:/ conversion
	var=`cygpath -w $var`

	# but then we have to swap \ for / (extra \ needed because the
	# shell makes a first pass at removing the \.
	var=`echo "$var" | sed 's/\\\/\\//g'`
    fi

    # TODO: fix spaces in args
    if test "`echo $var | grep ' '`" = "$var"
    then
  	var="'$var'"
    fi

    args="$args $var"
    
done
# finally the command is to call perl with the name of the script and the args.
cmd="perl.exe $args"

$cmd 

