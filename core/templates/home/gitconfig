[alias]
	alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\: \\2/' | sort

	a = !git add . && git status
	au = !git add -u && git status
	aa = !git add . && git add -u && git status

	amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend

	b = branch
	
	c = commit
	cm = commit -m
	
	cp = cherry-pick

	d = diff
	ds = diff --staged

	fp = format-patch

	ignore = !([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore

	# http://www.jukie.net/bart/blog/pimping-out-git-log
	l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

	ll = log --stat --abbrev-commit

	# See what we are about to push
	#outgoing = log --stat origin..@{0}
	#outgoing-diff = log -p origin..@{0}

	remove = !git ls-files -z --deleted | xargs -0 git rm

	s = status
	st = status

	search = grep --color -n
	
	# See which commit a tag points to
	# http://stackoverflow.com/questions/1862423/git-how-to-tell-which-commit-a-tag-points-to
	#tagcommit = !sh -c 'git rev-list $0 | head -n 1'

[color]
	branch = auto
	diff = auto
	status = auto
	ui = auto

[core]
	pager = "less -FRSX"
	whitespace = tab-in-indent

[format]
	pretty = fuller

[push]
	# Push the current branch to its upstream branch
	default = tracking

[remote "origin"]
	# Push only the current branch
	push = HEAD

[rerere]
	# Record and replay conflict resolutions automatically
	enabled = true
	autoupdate = true

[rebase]
	# Show a diffstat in 'git pull --rebase'
	stat = true

[status]
	relativePaths = false

[user]
	name = ${NAME}
	email = ${EMAIL}


#------------------------------------------------------------------------------
# Local
#------------------------------------------------------------------------------

[include]
	path = ${HOME}/.gitconfig-local

